plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

indeedOss.activateFeature 'library'
indeedLibrary.name = 'proctor-webapp-library'

dependencies {
    implementation project(path: ':proctor-common', configuration: 'shadow')
    implementation project(':proctor-store')
    implementation project(':proctor-store-svn')
    implementation project(':proctor-store-git')
    implementation project(':proctor-tomcat-deps')
    implementation 'com.indeed:util-varexport:1.0.49-1cfb888'
    implementation 'com.indeed:util-core:1.0.49-1cfb888'
    implementation libs.springBeans
    implementation libs.springContext
    implementation libs.springCore
    implementation libs.springJdbc
    implementation libs.springWeb
    implementation libs.springWebmvc
    implementation 'org.apache.commons:commons-collections4:4.3'
    implementation 'org.apache.httpcomponents:httpclient:4.5.5'
    implementation libs.commonsIo
    implementation libs.svnkit
    implementation libs.guava
    implementation libs.log4jCore
    implementation libs.log4jApi
    implementation libs.jacksonDatabind
    implementation libs.commonsLang
    compileOnly libs.jsr305
    implementation libs.servletApi
    testImplementation libs.junit
    testImplementation libs.assertj
    testImplementation libs.mockito
}

compileJava.dependsOn(':proctor-common:jar')
test.dependsOn(':proctor-store:shadowJar')
test.dependsOn(':proctor-store-git:shadowJar')
test.dependsOn(':proctor-store-svn:shadowJar')

shadowJar.dependsOn(':proctor-store:shadowJar')
shadowJar.dependsOn(':proctor-store-git:shadowJar')
shadowJar.dependsOn(':proctor-store-svn:shadowJar')

// Need to remove all dependenceis that get added or will cause issues upstream when projects include
// Plan to remove in PROC-1290: Remove Proctor Shading of Javax El libraries
shadowJar {
    archiveClassifier.set('')
    dependencies {
        exclude(dependency('org.apache.commons:commons-pool2'))
        exclude(dependency('org.tmatesoft.svnkit:svnkit'))
        exclude(dependency('org.springframework:spring-core'))
        exclude(dependency('org.springframework:spring-jdbc'))
        exclude(dependency('org.springframework:spring-beans'))
        exclude(dependency('org.springframework:spring-web'))
        exclude(dependency('org.springframework:spring-webmvc'))
        exclude(dependency('org.springframework:spring-context'))
        exclude(dependency('com.google.guava:guava'))
        exclude(dependency('org.apache.commons:commons-lang3'))
        exclude(dependency('commons-logging:commons-logging'))
        exclude(dependency('commons-logging:commons-logging-api'))
        exclude(dependency('commons-io:commons-io'))
        exclude(dependency('org.slf4j:slf4j-api'))
        exclude(dependency('com.google.code.findbugs:jsr305'))
        exclude(dependency('com.fasterxml.jackson.core:jackson-databind'))
        exclude(dependency('org.apache.logging.log4j:log4j-api'))
        exclude(dependency('org.apache.logging.log4j:log4j-core'))
        exclude(dependency('com.indeed:util-varexport'))
        exclude(dependency('com.indeed:util-core'))
        exclude(dependency('com.fasterxml.jackson.core:jackson-core'))
        exclude(dependency('com.fasterxml.jackson.core:jackson-annotations'))
        exclude(dependency('org.eclipse.jgit:org.eclipse.jgit'))
        exclude(dependency('com.jcraft:jsch'))
        exclude(dependency('com.jcraft:jsch.agentproxy.usocket-jna'))
        exclude(dependency('com.jcraft:jsch.agentproxy.pageant'))
        exclude(dependency('com.jcraft:jsch.agentproxy.connector-factory'))
        exclude(dependency('com.jcraft:jsch.agentproxy.svnkit-trilead-ssh2'))
        exclude(dependency('com.jcraft:jsch.agentproxy.jsch'))
        exclude(dependency('com.jcraft:jsch.agentproxy.core'))
        exclude(dependency('com.jcraft:jsch.agentproxy.usocket-nc'))
        exclude(dependency('com.jcraft:jsch.agentproxy.sshagent'))
        exclude(dependency('com.jcraft:jzlib'))
        exclude(dependency('com.googlecode.javaewah:JavaEWAH'))
        exclude(dependency('org.tmatesoft.sqljet:sqljet'))
        exclude(dependency('net.java.dev.jna:jna'))
        exclude(dependency('de.regnis.q.sequence:sequence-library'))
        exclude(dependency('com.trilead:trilead-ssh2'))
        exclude(dependency('org.antlr:antlr-runtime'))
        exclude(dependency('net.java.dev.jna:platform'))
        exclude(dependency('org.apache.httpcomponents:httpclient'))
        exclude(dependency('org.apache.commons:commons-collections4'))
        exclude(dependency('javax.servlet:javax.servlet-api'))
        exclude(dependency('org.springframework:spring-expression'))
        exclude(dependency('org.springframework:spring-aop'))
        exclude(dependency('org.springframework:spring-dao'))
        exclude(dependency('org.springframework:spring-tx'))
        exclude(dependency('org.springframework:spring-jca'))
        exclude(dependency('org.apache.commons:commons-lang3'))
        exclude(dependency('commons-codec:commons-codec'))
        exclude(dependency('org.apache.httpcomponents:httpcore'))
        exclude(dependency('org.apache.httpcomponents:httpcomponents-client'))
        exclude(dependency('org.apache.httpcomponents:httpcomponents-core'))
        exclude(dependency('org.aopalliance:com.springsource.oprg.aopalliance'))
        exclude(project(':proctor-tomcat-deps'))
        exclude(project(':proctor-common'))
        exclude(project(':proctor-store'))
        exclude(project(':proctor-store-git'))
        exclude(project(':proctor-store-svn'))
    }
    exclude('META-INF/web-fragment.xml')
    exclude('META-INF/services/javax.el.ExpressionFactory')
    relocate 'javax.el', 'com.indeed.shaded.javax.el7'
    relocate 'org.apache.el', 'com.indeed.shaded.org.apache.el7'
    relocate 'org.apache.tomcat', 'com.indeed.shaded.org.apache.el7'
}

shadowJar.mustRunAfter jar
