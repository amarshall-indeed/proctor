plugins {
    id 'com.indeed.java-conventions'
    id "application"
}

dependencies {
    api gradleApi()
    implementation project(':proctor-common')
    implementation project(':proctor-consumer')
    implementation project(':proctor-codegen')
    implementation project(':proctor-builder')
    implementation libs.commonsIo
    implementation libs.jacksonDatabind
    testImplementation libs.jacksonCore
    testImplementation 'javax.servlet:javax.servlet-api:3.0.1'
    testImplementation libs.annotationApi
    testImplementation libs.junit
    testImplementation libs.assertj
    testImplementation 'com.indeed:util-core:1.0.49-1cfb888'
    testImplementation 'com.indeed:util-varexport:1.0.49-1cfb888'

}

ext {
    javaMainClass = "com.indeed.proctor.codegen.test.ProctorGradleAutogenTask"
}

application {
    mainClassName = javaMainClass
}

task runWithJavaExec(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = javaMainClass
}

compileTestJava.dependsOn(runWithJavaExec)

description = 'proctor-codegen-test'